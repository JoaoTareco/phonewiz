generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
  schemas      = ["public", "storage"]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model test {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model buckets {
  id                 String    @id
  name               String    @unique(map: "bname")
  owner              String?   @db.Uuid
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  public             Boolean?  @default(false)
  avif_autodetection Boolean?  @default(false)
  file_size_limit    BigInt?
  allowed_mime_types String[]
  owner_id           String?

  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model migrations {
  id          Int       @id
  name        String    @unique @db.VarChar(100)
  hash        String    @db.VarChar(40)
  executed_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("storage")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model objects {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bucket_id        String?
  name             String?
  owner            String?   @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  last_accessed_at DateTime? @default(now()) @db.Timestamptz(6)
  metadata         Json?
  path_tokens      String[]  @default(dbgenerated("string_to_array(name, '/'::text)"))
  version          String?
  owner_id         String?

  @@unique([bucket_id, name], map: "bucketid_objname")
  @@index([name], map: "name_prefix_search")
  @@schema("storage")
}

model UserApiLimit {
  id         Int       @id @default(autoincrement())
  userId     String?   @unique @db.VarChar
  count      BigInt?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime? @db.Timestamptz(6)

  @@schema("public")
}

model UserSubscription {
  id                     Int       @id @default(autoincrement())
  userId                 String?   @unique @db.VarChar
  stripeCustomerId       String?   @db.VarChar
  stripeSubscriptionId   String?   @db.VarChar
  stripePriceId          String?   @db.VarChar
  stripeCurrentPeriodEnd String?   @db.VarChar
  created_at             DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model content_plans {
  id           BigInt   @id @default(autoincrement())
  content_plan Json?    @db.Json
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  niche        String?
  struggles    String?
  mistakes     String?
  social_proof String?
  user_id      String?  @db.VarChar
  innactive    Boolean?

  @@schema("public")
}
